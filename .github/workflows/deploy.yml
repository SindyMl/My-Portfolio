# 🚀 Sindiswa's Portfolio - Automated Deployment
name: 🎯 Deploy Portfolio to GitHub Pages

on:
  # Trigger on pushes to main branch
  push:
    branches: ['main']
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'LICENSE'

  # Trigger on pull requests to main
  pull_request:
    branches: ['main']

  # Allow manual deployment from Actions tab
  workflow_dispatch:
    inputs:
      deploy_environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

# Required permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Prevent concurrent deployments
concurrency:
  group: 'pages-${{ github.ref }}'
  cancel-in-progress: true

# Environment variables
env:
  NODE_VERSION: '18'
  CACHE_KEY: 'portfolio-v1'

jobs:
  # 🧪 Quality checks and testing
  quality-check:
    name: 🔍 Code Quality & Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run type checking
        run: npm run typecheck

      - name: 🧹 Run ESLint
        run: npm run lint

      - name: 🏗️ Test build
        run: npm run build

  # 🚀 Build and Deploy
  deploy:
    name: 🚀 Build & Deploy
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better caching

      - name: 🟢 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📊 Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.CACHE_KEY }}-
            ${{ runner.os }}-node-

      - name: 📦 Install dependencies
        run: |
          echo "🔄 Installing npm dependencies..."
          npm ci --prefer-offline --no-audit
          echo "✅ Dependencies installed successfully!"

      - name: 🔍 Run type checking
        run: |
          echo "🔍 Running TypeScript type check..."
          npm run typecheck

      - name: 🧹 Run linting
        run: |
          echo "🧹 Running ESLint..."
          npm run lint
        continue-on-error: true

      - name: 🏗️ Build portfolio
        run: |
          echo "🚀 Building Sindiswa's Portfolio..."
          npm run build
          echo "✅ Build completed successfully!"
          echo "📊 Build size:"
          du -sh dist/

      - name: 🔧 Configure GitHub Pages
        uses: actions/configure-pages@v4

      - name: 📤 Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          name: portfolio-build-${{ github.sha }}

      - name: 🌐 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 🎉 Deployment Success
        run: |
          echo "🎊 Portfolio deployed successfully!"
          echo "🌐 Live URL: ${{ steps.deployment.outputs.page_url }}"
          echo "📝 Commit: ${{ github.sha }}"
          echo "🏷️ Branch: ${{ github.ref_name }}"